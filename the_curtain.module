<?php
/**
 * @file
 * .module file for 'the_curtain' module
 */

/**
 * Implements hook_menu()
 */
function the_curtain_menu() {
  $menu['admin/config/development/the_curtain'] = array(
    'title' => 'The Curtain',
    'description' => 'Pay no attention to that man behind the curtain.',
    'page callback' => '_the_curtain_admin_page',
    'access arguments' => array('access administration pages'),
    'file' => 'the_curtain.admin.inc',
    'type' => MENU_NORMAL_ITEM,
    'weight' => $weight = 0,
  );
  $menu['admin/config/development/the_curtain/unveil'] = array(
    'title' => 'Unveilings',
    'description' => 'Show behind-the-scenes data from Drupal.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_the_curtain_admin_unveilings_form'),
    // this has its own permission since it changes the display on regular pages.
    'access arguments' => array('the curtain unveil'),
    'file' => 'the_curtain.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => $weight++,
  );
  // create an array of similar menu items
  if ( module_exists('url_alias') ) {
    $revealings['aliases'] = array(
      'title'=> t('Aliases'),
      'description' => t('Display the URL Aliases table'),
      'page callback' => '_the_curtain_admin_aliases',
    );
  }
  $revealings['menu_router'] = array(
    'title'=> t('Menu Router'),
    'description' => t('Display the Menu Router table'),
    'page callback' => '_the_curtain_admin_menu_router',
  );
  $revealings['cache_bootstrap'] = array(
    'title' => t('Hooks'),
    'description' => t('Show Hook Information.'),
    'page callback' => '_the_curtain_admin_cache_bootstrap',
  );
  $revealings['system'] = array(
    'title' => t('System Table'),
    'description' => t('Display the System table (installed and available modules and themes).'),
    'page callback' => '_the_curtain_admin_system',
  );

  foreach ( $revealings as $key => $revealing ) {
    $menu['admin/config/development/the_curtain/' . $key] = array(
      'title' => $revealing['title'],
      'description' => $revealing['description'],
      'page callback' => $revealing['page callback'],
      'access arguments' => array('access administration pages'),
      'file' => 'the_curtain.admin.inc',
      'type' => MENU_LOCAL_TASK,
      'weight' => $weight++,
    );
  }
  return $menu;
}

/**
 * Implements hook_permission
 */
function the_curtain_permission() {
  return array(
    'the curtain unveil' => array(
      'title'=> t('Unveil the inner workings of Drupal'),
      'description' => t('Show things such as SQL strings, form data, etc. on pages.'),
    ),
  );
}

/**
 * Implements hook_query_alter()
 * Displays the all available queries to the UI
 */
function the_curtain_query_alter(SelectQueryInterface $query) {
  if ( get_class($query) != 'EntityFieldQuery' &&
    ( variable_get('the_curtain_show_sql')
      || ( variable_get('the_curtain_show_efq') && $query->hasTag('the_curtain') )
    )
  ) {
    module_load_include('inc', 'the_curtain', 'the_curtain.utils');
    drupal_set_message(the_curtain_query_to_sql($query));
  }
}

/**
 * Implements hook_form_alter()
 * Displays form and form state data if directed.
 */
function the_curtain_form_alter($form, &$form_state) {
  if ( variable_get('the_curtain_show_forms') ) {
    kpr($form);
  }
  if ( variable_get('the_curtain_show_form_states') ) {
    kpr($form_state);
  }
}

/**
 * Implements hook_entity_field_query
 * alters Entity Field Queries to tag them,
 * so that their quieries are displayed,
 * if so directed
 */
function the_curtain_entity_query_alter($query) {
  if ( variable_get('the_curtain_show_efq') ) {
    $query->addTag('the_curtain');
  }
}
